version: 2.1

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: main

jobs:
  build:
    working_directory: ~/Source-Code
    docker:
      - image: cimg/node:20.14.0
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Run tests
          command: |
            CI=true npm test -- --watchAll=false --passWithNoTests
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - persist_to_workspace:
          root: .
          paths: .

  deploy:
    working_directory: ~/Source-Code
    docker:
      - image: cimg/node:20.14.0
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Setup SSH
          command: |
            mkdir -p ~/.ssh
            echo "$SSH_PRIVATE_KEY" > ~/.ssh/ec2_key
            chmod 600 ~/.ssh/ec2_key
            ssh-keyscan $EC2_PUBLIC_DNS >> ~/.ssh/known_hosts
      - run:
          name: Create deployment script
          command: |
            cat << 'EOF' > deploy.sh
            #!/usr/bin/env bash
            set -e
            
            # Update system and install dependencies
            sudo apt-get update
            if ! command -v node &>/dev/null; then
              curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
              sudo apt-get install -y nodejs nginx
              sudo npm install -g npm@latest pm2
            fi
            
            # Clone and build application
            rm -rf Source-Code
            git clone https://github.com/GroupA-DevOpsSec-2025/Source-Code.git
            cd Source-Code
            npm install
            npm run build
            
            # Deploy frontend files
            sudo rm -rf /var/www/html/*
            sudo cp -a build/* /var/www/html/
            sudo chown -R www-data:www-data /var/www/html
            
            # Setup SSL certificates
            sudo mkdir -p /etc/ssl/private /etc/ssl/certs
            cat << 'CERT' | sudo tee /etc/ssl/private/privatekey.pem >/dev/null
            -----BEGIN PRIVATE KEY-----
            ${PRIVATE_KEY}
            -----END PRIVATE KEY-----
            CERT
            
            cat << 'CERT' | sudo tee /etc/ssl/certs/server.crt >/dev/null
            -----BEGIN CERTIFICATE-----
            ${SERVER_CERT}
            -----END CERTIFICATE-----
            CERT
            
            # Set proper permissions
            sudo chmod 600 /etc/ssl/private/privatekey.pem
            sudo chmod 644 /etc/ssl/certs/server.crt
            
            # Configure Nginx
            cat << 'NGINX' | sudo tee /etc/nginx/sites-available/todo-app >/dev/null
            server {
              listen 80;
              server_name ${EC2_PUBLIC_DNS};
              return 301 https://\$host\$request_uri;
            }
            
            server {
              listen 443 ssl;
              server_name ${EC2_PUBLIC_DNS};
              
              ssl_certificate /etc/ssl/certs/server.crt;
              ssl_certificate_key /etc/ssl/private/privatekey.pem;
              
              root /var/www/html;
              location / {
                try_files \$uri /index.html;
              }
              location /api {
                proxy_pass http://localhost:3001;
                proxy_http_version 1.1;
                proxy_set_header Upgrade \$http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host \$host;
                proxy_set_header X-Real-IP \$remote_addr;
                proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
              }
            }
            NGINX
            
            # Enable Nginx configuration
            sudo ln -sf /etc/nginx/sites-available/todo-app /etc/nginx/sites-enabled/
            sudo rm -f /etc/nginx/sites-enabled/default
            
            # Start server application
            cd server
            npm install
            pm2 delete todo-api 2>/dev/null || true
            pm2 start ./bin/www --name todo-api
            pm2 save
            pm2 startup || true
            
            # Restart Nginx
            sudo nginx -t && sudo systemctl restart nginx
            EOF
            
            chmod +x deploy.sh
      - run:
          name: Deploy application
          command: |
            scp -i ~/.ssh/ec2_key deploy.sh $EC2_USERNAME@$EC2_PUBLIC_DNS:~
            ssh -i ~/.ssh/ec2_key -o StrictHostKeyChecking=no \
              $EC2_USERNAME@$EC2_PUBLIC_DNS \
              "export EC2_PUBLIC_DNS='$EC2_PUBLIC_DNS'; \
               export PRIVATE_KEY='$PRIVATE_KEY'; \
               export SERVER_CERT='$SERVER_CERT'; \
               bash ~/deploy.sh"